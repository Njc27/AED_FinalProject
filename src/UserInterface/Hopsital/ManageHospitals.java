/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.Hopsital;

import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JSplitPane;
import javax.swing.table.DefaultTableModel;
import ComEnterprise.City;
import ComEnterprise.CityCatalouge;
import ComEnterprise.Community;
import ComEnterprise.CommunityCatalouge;
import HospitalEnterprise.Hospital;
import HospitalEnterprise.HospitalCatalouge;
import ComEnterprise.People;

/**
 *
 * @author namithajc
 */
public class ManageHospitals extends javax.swing.JPanel {

    /**
     * Creates new form ManageHospitals
     */
    JSplitPane jSplitPane2;
    JSplitPane jSplitPane1;
    CityCatalouge cityLog;
    JPanel mainPanel;
    JPanel jPanel2;
    public ManageHospitals(JSplitPane jSplitPane2, JSplitPane jSplitPane1, CityCatalouge cityLog, JPanel mainPanel, JPanel jPanel2) {
        initComponents();
        this.jSplitPane2 = jSplitPane2;
        this.jSplitPane1 = jSplitPane1;
        this.cityLog = cityLog;
        this.mainPanel = mainPanel;
        this.jPanel2 = jPanel2;
         for (int i = 0; i< cityLog.size();i++){
            jCity.addItem(cityLog.get(i).getCityName());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jCity = new javax.swing.JComboBox<>();
        jCommunity = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setBackground(new java.awt.Color(170, 185, 207));

        jLabel1.setFont(new java.awt.Font("Lava Kannada", 1, 14)); // NOI18N
        jLabel1.setText("Manage Hospitals");

        jLabel2.setFont(new java.awt.Font("Lava Kannada", 0, 14)); // NOI18N
        jLabel2.setText("City:");

        jLabel3.setBackground(new java.awt.Color(247, 247, 255));
        jLabel3.setFont(new java.awt.Font("Lava Kannada", 0, 14)); // NOI18N
        jLabel3.setText("Community:");

        jButton3.setBackground(new java.awt.Color(247, 247, 255));
        jButton3.setFont(new java.awt.Font("Lava Kannada", 0, 12)); // NOI18N
        jButton3.setText("Search");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jCity.setBackground(new java.awt.Color(247, 247, 255));
        jCity.setFont(new java.awt.Font("Lava Kannada", 0, 14)); // NOI18N
        jCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCityActionPerformed(evt);
            }
        });

        jCommunity.setBackground(new java.awt.Color(247, 247, 255));
        jCommunity.setFont(new java.awt.Font("Lava Kannada", 0, 14)); // NOI18N
        jCommunity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCommunityActionPerformed(evt);
            }
        });

        jScrollPane1.setBackground(new java.awt.Color(247, 247, 255));

        jTable1.setFont(new java.awt.Font("Lava Kannada", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Hospital Name", "Contact"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton4.setBackground(new java.awt.Color(247, 247, 255));
        jButton4.setFont(new java.awt.Font("Lava Kannada", 0, 12)); // NOI18N
        jButton4.setText("View");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(247, 247, 255));
        jButton5.setFont(new java.awt.Font("Lava Kannada", 0, 12)); // NOI18N
        jButton5.setText("Delete");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(247, 247, 255));
        jButton6.setFont(new java.awt.Font("Lava Kannada", 0, 12)); // NOI18N
        jButton6.setText("Add");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton6)
                        .addGap(174, 174, 174)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton5))
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCity, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                        .addComponent(jButton3)))
                .addGap(21, 21, 21))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1)
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jButton3)
                    .addComponent(jCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton5)
                    .addComponent(jButton6))
                .addContainerGap(7, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jCommunityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCommunityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCommunityActionPerformed

    private void jCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCityActionPerformed
        // TODO add your handling code here:
          DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        
       String selectedCity = (String) jCity.getSelectedItem();
        City selected  = new City();
        jCommunity.removeAllItems();
        selected = cityLog.searchCity(selectedCity);
        CommunityCatalouge commLog = new CommunityCatalouge();
        commLog = selected.getCommunityCatalog();
         for(int i = 0 ; i < commLog.getCommunityCatalog().size();i++){
             jCommunity.addItem(commLog.get(i).getCommunityName());
         }  
         String selectedComm = (String) jCommunity.getSelectedItem();
         
         for (int i =0;i<commLog.searchCommunity(selectedComm).getHospitalCataloug().size();i++){
                        Object rowData[] = new Object[2];
                        rowData[0] = commLog.searchCommunity(selectedComm).getHospitalCataloug().get(i).getHospitalName();
                        rowData[1] = commLog.searchCommunity(selectedComm).getHospitalCataloug().get(i).getPhoneNo();
                        model.addRow(rowData);
        }
    }//GEN-LAST:event_jCityActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        String selectedCity = (String) jCity.getSelectedItem();
        String selectedComm = (String) jCommunity.getSelectedItem();
        City selected = cityLog.searchCity(selectedCity);
        CommunityCatalouge commLog = new CommunityCatalouge();
        commLog = selected.getCommunityCatalog();
         for (int i =0;i<commLog.searchCommunity(selectedComm).getHospitalCataloug().size();i++){
                        Object rowData[] = new Object[2];
                        rowData[0] = commLog.searchCommunity(selectedComm).getHospitalCataloug().get(i).getHospitalName();
                        rowData[1] = commLog.searchCommunity(selectedComm).getHospitalCataloug().get(i).getPhoneNo();
                        model.addRow(rowData);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        String selectedCity = (String) jCity.getSelectedItem();
        String selectedComm = (String) jCommunity.getSelectedItem();
        HospitalDetails hosDetails = new HospitalDetails(jSplitPane2, jSplitPane1, cityLog, mainPanel,jPanel2,false, new Hospital(), selectedComm, selectedCity);
        jSplitPane2.setRightComponent(hosDetails);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        int selectedRow = jTable1.getSelectedRow();
        if(selectedRow == -1){
            JOptionPane.showMessageDialog(this, "Please Select a Row");
        }
        else{
            String id = (String) model.getValueAt(selectedRow,0);
            String phnNo = (String) model.getValueAt(selectedRow,1);
            String selectedComm = (String) jCommunity.getSelectedItem();
            String selectedCity = (String) jCity.getSelectedItem();
            City city = cityLog.searchCity(selectedCity);
            HospitalCatalouge hosCol = city.getCommunityCatalog().searchCommunity(selectedComm).getHospitalCataloug();
            for(int i = 0;i < hosCol.size();i++){
                Hospital hos = hosCol.get(i);
                if(hos.getHospitalName().equals(id) && hos.getPhoneNo().equals(phnNo)){
                    HospitalDetails hosDetails = new HospitalDetails(jSplitPane2, jSplitPane1, cityLog, mainPanel,jPanel2,true,hos,selectedComm,selectedCity);
                    jSplitPane2.setRightComponent(hosDetails);
                }
                    break;
                }
            }
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        int selectedRow = jTable1.getSelectedRow();
        if(selectedRow == -1){
            JOptionPane.showMessageDialog(this, "Please Select a Row");
        }
        else{
            String id = (String) model.getValueAt(selectedRow,0);
            String phnNo = (String) model.getValueAt(selectedRow,1);
            String selectedComm = (String) jCommunity.getSelectedItem();
            String selectedCity = (String) jCity.getSelectedItem();
            City city = cityLog.searchCity(selectedCity);
            HospitalCatalouge hosCol = city.getCommunityCatalog().searchCommunity(selectedComm).getHospitalCataloug();
            hosCol.removeHospital(id);
            model.setRowCount(0);
            for (int i =0;i<hosCol.size();i++){
                        Object rowData[] = new Object[2];
                        rowData[0] = hosCol.get(i).getHospitalName();
                        rowData[1] = hosCol.get(i).getPhoneNo();
                        model.addRow(rowData);
        }
        }
        
    }//GEN-LAST:event_jButton5ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox<String> jCity;
    private javax.swing.JComboBox<String> jCommunity;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
