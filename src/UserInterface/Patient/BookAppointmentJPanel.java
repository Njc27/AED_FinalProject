/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.Patient;

import Business.Organization;
import CommunityEnterprise.City;
import CommunityEnterprise.CityDirectory;
import CommunityEnterprise.Community;
import CommunityEnterprise.CommunityDirectory;
import CommunityEnterprise.People;
import HospitalEnterprise.Appointments;
import HospitalEnterprise.DoctorDirectory;
import HospitalEnterprise.Hospital;
import HospitalEnterprise.HospitalDirectory;
import HospitalEnterprise.Patient;
import java.util.Date;
import javax.swing.JSplitPane;

/**
 *
 * @author namithajc
 */
public class BookAppointmentJPanel extends javax.swing.JPanel {

    /**
     * Creates new form BookAppointmentJPanel
     */
    Organization system;
    JSplitPane jSplitPane2;
    CityDirectory cityList;
    People p;
    Community comm;
    City c;
    public BookAppointmentJPanel(Organization system) {
        initComponents();
        this.system = system;
        
        this.jSplitPane2 = jSplitPane2;
        this.cityList = cityList;
        this.p = p;
        this.comm = comm;
       jDateChooser1.getJCalendar().setMinSelectableDate(new Date());
        for (int i = 0; i< system.getCityDirectory().getCityList().size();i++){
            jCity.addItem(system.getCityDirectory().getCityList().get(i).getCityName());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jCity = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jCommunity = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jhospital = new javax.swing.JComboBox<>();
        jLSelectDoc = new javax.swing.JLabel();
        jDoctor = new javax.swing.JComboBox<>();
        jLChooseDate = new javax.swing.JLabel();
        jLSelectTime = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();

        jLabel1.setFont(new java.awt.Font("Lava Kannada", 1, 14)); // NOI18N
        jLabel1.setText("Schedule Appointment");

        jLabel2.setFont(new java.awt.Font("Lava Kannada", 0, 14)); // NOI18N
        jLabel2.setText("Select City:");

        jCity.setFont(new java.awt.Font("Lava Kannada", 0, 14)); // NOI18N
        jCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCityActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Lava Kannada", 0, 14)); // NOI18N
        jLabel3.setText("Select Community:");

        jCommunity.setFont(new java.awt.Font("Lava Kannada", 0, 14)); // NOI18N
        jCommunity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCommunityActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Lava Kannada", 0, 14)); // NOI18N
        jLabel4.setText("Select Hospital:");

        jhospital.setFont(new java.awt.Font("Lava Kannada", 0, 14)); // NOI18N
        jhospital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jhospitalActionPerformed(evt);
            }
        });

        jLSelectDoc.setFont(new java.awt.Font("Lava Kannada", 0, 14)); // NOI18N
        jLSelectDoc.setText("Select Doctor:");

        jDoctor.setFont(new java.awt.Font("Lava Kannada", 0, 14)); // NOI18N

        jLChooseDate.setFont(new java.awt.Font("Lava Kannada", 0, 14)); // NOI18N
        jLChooseDate.setText("Choose Date:");

        jLSelectTime.setFont(new java.awt.Font("Lava Kannada", 0, 14)); // NOI18N
        jLSelectTime.setText("Select Time:");

        jButton2.setFont(new java.awt.Font("Lava Kannada", 0, 12)); // NOI18N
        jButton2.setText("Schedule");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(35, 320, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(320, 320, 320))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(241, 241, 241)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLSelectDoc)
                            .addComponent(jLChooseDate)
                            .addComponent(jLSelectTime)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jCity, 0, 145, Short.MAX_VALUE)
                            .addComponent(jCommunity, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jhospital, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jDoctor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField1)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(349, 349, 349)
                        .addComponent(jButton2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jLabel1)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jhospital, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLSelectDoc)
                    .addComponent(jDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLChooseDate)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLSelectTime)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addComponent(jButton2)
                .addContainerGap(145, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCityActionPerformed
        //TODO add your handling code here:
        jCommunity.removeAllItems();
        String selectedCity = (String) jCity.getSelectedItem();
        City selected = system.getCityDirectory().getCityByName(selectedCity);
        CommunityDirectory commLog = selected.getComDir();
         for(int i = 0 ; i < commLog.getCommunityList().size();i++){
             jCommunity.addItem(commLog.getCommunityList().get(i).getName());
         }
    }//GEN-LAST:event_jCityActionPerformed

    private void jCommunityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCommunityActionPerformed
        // TODO add your handling code here:
        jhospital.removeAllItems();
        String selectedCity = (String) jCity.getSelectedItem();
        City citySelected = system.getCityDirectory().getCityByName(selectedCity);
        String selectedCom = (String) jCommunity.getSelectedItem();
        Community comSelected = citySelected.getComDir().getCommunityByName(selectedCom);
        HospitalDirectory hosp = comSelected.getHospDirectory();
         for(int i = 0 ; i < hosp.gethospList().size();i++){
             jhospital.addItem(hosp.gethospList().get(i).getName());
         }       
    }//GEN-LAST:event_jCommunityActionPerformed

    private void jhospitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jhospitalActionPerformed
        // TODO add your handling code here:
        jDoctor.removeAllItems();
        String selectedCity = (String) jCity.getSelectedItem();
        City citySelected = system.getCityDirectory().getCityByName(selectedCity);
        String selectedCom = (String) jCommunity.getSelectedItem();
        Community comSelected = citySelected.getComDir().getCommunityByName(selectedCom);
        HospitalDirectory hosp = comSelected.getHospDirectory();
        String selectedHosp = (String) jhospital.getSelectedItem();
        Hospital hospSelected = comSelected.getHospDirectory().getHospitalByName(selectedHosp);
        DoctorDirectory doc = hospSelected.getDoctorDirectory();
         for(int i = 0 ; i < doc.getDoctorList().size();i++){
             jDoctor.addItem(doc.getDoctorList().get(i).getFirstName());
         } 
    }//GEN-LAST:event_jhospitalActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Date appointmentDate = jDateChooser1.getDate();
        String appointmentTime = jTextField1.getText();
        Patient p = new Patient();
        Appointments e = new Appointments();
        e.setAppointmentDate(appointmentDate);
        e.setAppointmentTime(appointmentTime);
        e.setPatient(p);
        String selDoctor = (String) jDoctor.getSelectedItem();
        for(int i = 0 ; i<comm.getHospDirectory().size();i++){
            Hospital hosp = comm.getHospDirectory().getHospitalByName(appointmentTime);
            for(int j=0;j<hosp.getDoctorDirectory().size();j++){
                if(hosp.getDoctorDirectory().getDoctorList().get(i).getFirstName().equalsIgnoreCase(selDoctor)){
                    hosp.getDoctorDirectory().getDoctorList().get(i).getAppointmentCatalouge().addAppointment(e);
                    ReportPage rp = new ReportPage(system);
                    jSplitPane2.setRightComponent(rp);
                    break;
                }
            }
        }
//        //        hosp.getPatientCatalouge().addPatient(people);
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jCity;
    private javax.swing.JComboBox<String> jCommunity;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JComboBox<String> jDoctor;
    private javax.swing.JLabel jLChooseDate;
    private javax.swing.JLabel jLSelectDoc;
    private javax.swing.JLabel jLSelectTime;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JComboBox<String> jhospital;
    // End of variables declaration//GEN-END:variables
}
