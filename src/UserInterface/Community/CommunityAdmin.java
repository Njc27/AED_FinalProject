/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.Community;

import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JSplitPane;
import javax.swing.table.DefaultTableModel;
import ComEnterprise.City;
import ComEnterprise.CityCatalouge;
import ComEnterprise.Community;
import ComEnterprise.CommunityCatalouge;
import HospitalEnterprise.Doctor;
import HospitalEnterprise.Hospital;
import HospitalEnterprise.HospitalCatalouge;
import ComEnterprise.People;
import HospitalEnterprise.PeopleCatalouge;
import UserInterface.Admin.PeopleDetails;
import UserInterface.Hopsital.ManageHospitals;

/**
 *
 * @author namithajc
 */
public class CommunityAdmin extends javax.swing.JPanel {

    /**
     * Creates new form CommunityAdmin
     */
    CityCatalouge cityLog;
    JSplitPane jSplitPane2;
    Community comm;
    City selectedCity;
    JPanel mainPanel;
    boolean isHospital;
    public CommunityAdmin(CityCatalouge cityLog,JSplitPane jSplitPane2, Community comm, JPanel mainPanel,City selectedCity,boolean isHospital) {
        initComponents();
        this.jSplitPane2 = jSplitPane2;
        this.jPanel2 = mainPanel;
        this.comm = comm;
        this.cityLog = cityLog;
        this.selectedCity = selectedCity;
        this.isHospital = isHospital;
        populateTable();
        if(isHospital){
        ManageHospitals manHospitals = new ManageHospitals(jSplitPane2,jSplitPane1,cityLog,mainPanel,jPanel2);
        jSplitPane1.setRightComponent(manHospitals);
        }
        for (int i = 0; i< cityLog.size();i++){
            jCity.addItem(cityLog.get(i).getCityName());
        }
        
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPeopleTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jCity = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jCommunity = new javax.swing.JComboBox<>();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();

        jSplitPane1.setDividerLocation(150);

        jPanel1.setBackground(new java.awt.Color(170, 185, 207));

        jButton3.setBackground(new java.awt.Color(247, 247, 255));
        jButton3.setFont(new java.awt.Font("Lava Kannada", 0, 12)); // NOI18N
        jButton3.setText("Manage People");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(247, 247, 255));
        jButton4.setFont(new java.awt.Font("Lava Kannada", 0, 12)); // NOI18N
        jButton4.setText("Manage Hospitals");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(229, 229, 229)
                .addComponent(jButton3)
                .addGap(18, 18, 18)
                .addComponent(jButton4)
                .addContainerGap(216, Short.MAX_VALUE))
        );

        jSplitPane1.setLeftComponent(jPanel1);

        jPanel2.setBackground(new java.awt.Color(170, 185, 207));

        jLabel1.setFont(new java.awt.Font("Mshtakan", 0, 24)); // NOI18N
        jLabel1.setText("Community Admin");

        jPeopleTable.setBackground(new java.awt.Color(247, 247, 255));
        jPeopleTable.setFont(new java.awt.Font("Lava Kannada", 0, 14)); // NOI18N
        jPeopleTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "House"
            }
        ));
        jScrollPane1.setViewportView(jPeopleTable);

        jLabel2.setFont(new java.awt.Font("Lava Kannada", 0, 14)); // NOI18N
        jLabel2.setText("City:");

        jCity.setBackground(new java.awt.Color(247, 247, 255));
        jCity.setFont(new java.awt.Font("Lava Kannada", 0, 14)); // NOI18N
        jCity.setMaximumSize(new java.awt.Dimension(72, 25));
        jCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCityActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Lava Kannada", 0, 14)); // NOI18N
        jLabel3.setText("Community:");

        jCommunity.setBackground(new java.awt.Color(247, 247, 255));
        jCommunity.setFont(new java.awt.Font("Lava Kannada", 0, 14)); // NOI18N
        jCommunity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCommunityActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(247, 247, 255));
        jButton5.setFont(new java.awt.Font("Lava Kannada", 0, 12)); // NOI18N
        jButton5.setText("Search People");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(247, 247, 255));
        jButton6.setFont(new java.awt.Font("Lava Kannada", 0, 12)); // NOI18N
        jButton6.setText("Add People");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton8.setBackground(new java.awt.Color(247, 247, 255));
        jButton8.setFont(new java.awt.Font("Lava Kannada", 0, 12)); // NOI18N
        jButton8.setText("View People");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setBackground(new java.awt.Color(247, 247, 255));
        jButton9.setFont(new java.awt.Font("Lava Kannada", 0, 12)); // NOI18N
        jButton9.setText("Delete People");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(37, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton8)
                        .addGap(120, 120, 120)
                        .addComponent(jButton9))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 13, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCity, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCommunity, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(77, 77, 77)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(jButton5)))
                .addGap(35, 35, 35))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5))
                .addGap(33, 33, 33)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(jButton8)
                    .addComponent(jButton9))
                .addGap(44, 44, 44))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 645, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                    .addGap(0, 30, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 521, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jSplitPane1.setRightComponent(jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
//        ManagePeople man = new ManageCity(jSplitPane2,cityLog,mainPanel);
           CommunityAdmin commAdmin = new CommunityAdmin(cityLog, jSplitPane2, comm,  mainPanel, selectedCity, false);
           jSplitPane2.setRightComponent(commAdmin);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        ManageHospitals manHospitals = new ManageHospitals(jSplitPane2,jSplitPane1,cityLog,mainPanel,jPanel2);
        jSplitPane1.setRightComponent(manHospitals);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCityActionPerformed
        // TODO add your handling code here:
         DefaultTableModel model = (DefaultTableModel) jPeopleTable.getModel();
        model.setRowCount(0);
        
       String selectedCity = (String) jCity.getSelectedItem();
        City selected  = new City();
        jCommunity.removeAllItems();
        selected = cityLog.searchCity(selectedCity);
        CommunityCatalouge commLog = new CommunityCatalouge();
        commLog = selected.getCommunityCatalog();
         for(int i = 0 ; i < commLog.getCommunityCatalog().size();i++){
             jCommunity.addItem(commLog.get(i).getCommunityName());
         }
         
         String selectedComm = (String) jCommunity.getSelectedItem();
         
         for (int i =0;i<commLog.searchCommunity(selectedComm).getPeopleCatalog().size();i++){
                        Object rowData[] = new Object[3];
                        rowData[0] = commLog.searchCommunity(selectedComm).getPeopleCatalog().get(i).getId();
                        rowData[1] = commLog.searchCommunity(selectedComm).getPeopleCatalog().get(i).getName();
                        rowData[2] = commLog.searchCommunity(selectedComm).getPeopleCatalog().get(i).getHouse().getApartementNo() + "/" +commLog.searchCommunity(selectedComm).getPeopleCatalog().get(i).getHouse().getStreetName() + "/" +commLog.searchCommunity(selectedComm).getPeopleCatalog().get(i).getHouse().getZipCode(); 
                        model.addRow(rowData);
        }
    }//GEN-LAST:event_jCityActionPerformed

    private void jCommunityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCommunityActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jCommunityActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        String selectedComm = (String) jCommunity.getSelectedItem();
        String selectedCity = (String) jCity.getSelectedItem();
        City city = cityLog.searchCity(selectedCity);
        
         DefaultTableModel model = (DefaultTableModel) jPeopleTable.getModel();
        model.setRowCount(0);
        for (int i =0;i<city.getCommunityCatalog().size();i++){
            if(city.getCommunityCatalog().get(i).getCommunityName().equals(selectedComm)){
                for(int j= 0;j < city.getCommunityCatalog().get(i).getPeopleCatalog().size();j++){
                        Object rowData[] = new Object[3];
                        rowData[0] = city.getCommunityCatalog().get(i).getPeopleCatalog().get(j).getId();
                        rowData[1] = city.getCommunityCatalog().get(i).getPeopleCatalog().get(j).getName();
                        rowData[2] = city.getCommunityCatalog().get(i).getPeopleCatalog().get(j).getHouse().getApartementNo() + "/" +city.getCommunityCatalog().get(i).getPeopleCatalog().get(j).getHouse().getStreetName() + "/" +city.getCommunityCatalog().get(i).getPeopleCatalog().get(j).getHouse().getZipCode(); 
                        model.addRow(rowData);
                }
            }
                        
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
         DefaultTableModel model = (DefaultTableModel) jPeopleTable.getModel();
        int selectedRow = jPeopleTable.getSelectedRow();
        if(selectedRow == -1){
            JOptionPane.showMessageDialog(this, "Please Select a Row");
        }
        else{
            String id = (String) model.getValueAt(selectedRow,0);
            String selectedComm = (String) jCommunity.getSelectedItem();
            String selectedCity = (String) jCity.getSelectedItem();
            City city = cityLog.searchCity(selectedCity);
            Community sComm = city.getCommunityCatalog().searchCommunity(selectedComm);
            People p =sComm.getPeopleCatalog().searchPeople(id);
            PeopleDetails peopDetails = new PeopleDetails(city,jSplitPane2,selectedCity,mainPanel,true,cityLog,p,selectedComm);
            jSplitPane2.setRightComponent(peopDetails);
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
         DefaultTableModel model = (DefaultTableModel) jPeopleTable.getModel();
        int selectedRow = jPeopleTable.getSelectedRow();
        if(selectedRow == -1){
            JOptionPane.showMessageDialog(this, "Please Select a Row");
        }
        else{
            String id = (String) model.getValueAt(selectedRow,0);
            String selectedComm = (String) jCommunity.getSelectedItem();
            String selectedCity = (String) jCity.getSelectedItem();
            City city = cityLog.searchCity(selectedCity);
            Community sComm = city.getCommunityCatalog().searchCommunity(selectedComm);
            People p =sComm.getPeopleCatalog().searchPeople(id);
            sComm.getPeopleCatalog().removePeople(p);
            model.setRowCount(0);
        for (int i =0;i<city.getCommunityCatalog().size();i++){
            if(city.getCommunityCatalog().get(i).getCommunityName().equals(selectedComm)){
                for(int j= 0;j < city.getCommunityCatalog().get(i).getPeopleCatalog().size();j++){
                        Object rowData[] = new Object[3];
                        rowData[0] = city.getCommunityCatalog().get(i).getPeopleCatalog().get(j).getId();
                        rowData[1] = city.getCommunityCatalog().get(i).getPeopleCatalog().get(j).getName();
                        rowData[2] = city.getCommunityCatalog().get(i).getPeopleCatalog().get(j).getHouse().getApartementNo() + "/" +city.getCommunityCatalog().get(i).getPeopleCatalog().get(j).getHouse().getStreetName() + "/" +city.getCommunityCatalog().get(i).getPeopleCatalog().get(j).getHouse().getZipCode(); 
                        model.addRow(rowData);
                }
            }
                        
        }
            
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        String selectedCity = (String) jCity.getSelectedItem();
        String selectedComm = (String) jCommunity.getSelectedItem();
        City city = cityLog.searchCity(selectedCity);
        PeopleDetails peopDetails = new PeopleDetails(city,jSplitPane2,selectedCity,mainPanel,false,cityLog, new People(), selectedComm);
        jSplitPane2.setRightComponent(peopDetails);
    }//GEN-LAST:event_jButton6ActionPerformed

    public void populateTable(){
//        DefaultTableModel model = (DefaultTableModel) jPeopleTable.getModel();
//        model.setRowCount(0);
//        for (int i =0;i<comm.getPeopleCatalog().size();i++){
//                        Object rowData[] = new Object[2];
//                        rowData[0] = comm.getPeopleCatalog().get(i).getName();
//                        rowData[1] = comm.getPeopleCatalog().get(i).getHouse().getApartementNo() + "/" +comm.getPeopleCatalog().get(i).getHouse().getStreetName() + "/" +comm.getPeopleCatalog().get(i).getHouse().getZipCode(); 
//                        model.addRow(rowData);
//        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jCity;
    private javax.swing.JComboBox<String> jCommunity;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTable jPeopleTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    // End of variables declaration//GEN-END:variables
}
