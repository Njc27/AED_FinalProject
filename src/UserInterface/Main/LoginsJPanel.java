/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.Main;

import ComEnterprise.City;
import ComEnterprise.CityCatalouge;
import ComEnterprise.Community;
import HospitalEnterprise.DoctorCatalouge;
import HospitalEnterprise.HospitalCatalouge;
import ComEnterprise.PeopleCatalouge;
import UserInterface.Admin.SystemAdmin;
import UserInterface.Community.CommunityAdmin;
import UserInterface.Hopsital.DoctorPage;
import UserInterface.Hopsital.HospitalAdmin;

import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JSplitPane;


/**
 *
 * @author namithajc
 */
public class LoginsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form LoginJPanel
     */
    CityCatalouge cityLog;
    JSplitPane jSplitPane2;
    JPanel jPanel2;
    public LoginsJPanel(JSplitPane jSplitPane2, CityCatalouge cityLog, JPanel jPanel2) {
        initComponents();
        this.cityLog = cityLog;
        this.jSplitPane2 = jSplitPane2;
        this.jPanel2 = jPanel2;
        jCity.setEnabled(false);
        jCommunity.setEnabled(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLUsername = new javax.swing.JLabel();
        jLPassword = new javax.swing.JLabel();
        jTUsername = new javax.swing.JTextField();
        jPassword = new javax.swing.JPasswordField();
        jBtnLogin = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jDropdown = new javax.swing.JComboBox<>();
        jCity = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jCommunity = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(170, 185, 207));

        jLUsername.setFont(new java.awt.Font("Lava Kannada", 0, 14)); // NOI18N
        jLUsername.setText("Username:");

        jLPassword.setBackground(new java.awt.Color(247, 247, 255));
        jLPassword.setFont(new java.awt.Font("Lava Kannada", 0, 14)); // NOI18N
        jLPassword.setText("Password:");

        jTUsername.setBackground(new java.awt.Color(247, 247, 255));
        jTUsername.setFont(new java.awt.Font("Lava Kannada", 0, 14)); // NOI18N
        jTUsername.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTUsernameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTUsernameFocusLost(evt);
            }
        });
        jTUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTUsernameActionPerformed(evt);
            }
        });

        jPassword.setBackground(new java.awt.Color(247, 247, 255));
        jPassword.setFont(new java.awt.Font("Lava Kannada", 0, 14)); // NOI18N
        jPassword.setForeground(new java.awt.Color(153, 153, 153));
        jPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPasswordFocusGained(evt);
            }
        });

        jBtnLogin.setBackground(new java.awt.Color(247, 247, 255));
        jBtnLogin.setFont(new java.awt.Font("Lava Kannada", 0, 14)); // NOI18N
        jBtnLogin.setText("Login");
        jBtnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnLoginActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(247, 247, 255));
        jLabel1.setFont(new java.awt.Font("Lava Kannada", 0, 14)); // NOI18N
        jLabel1.setText("Login As:");

        jDropdown.setBackground(new java.awt.Color(247, 247, 255));
        jDropdown.setFont(new java.awt.Font("Lava Kannada", 0, 14)); // NOI18N
        jDropdown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "System Admin", "Community Admin", "Hospital Admin", "Doctor Login" }));
        jDropdown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDropdownActionPerformed(evt);
            }
        });

        jCity.setBackground(new java.awt.Color(247, 247, 255));
        jCity.setFont(new java.awt.Font("Lava Kannada", 0, 14)); // NOI18N
        jCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCityActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Lava Kannada", 0, 14)); // NOI18N
        jLabel4.setText("City:");

        jLabel2.setBackground(new java.awt.Color(247, 247, 255));
        jLabel2.setFont(new java.awt.Font("Lava Kannada", 0, 14)); // NOI18N
        jLabel2.setText("Community:");

        jCommunity.setBackground(new java.awt.Color(247, 247, 255));
        jCommunity.setFont(new java.awt.Font("Lava Kannada", 0, 14)); // NOI18N
        jCommunity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCommunityActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(107, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLUsername, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jCity, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(61, 61, 61)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel2)
                            .addComponent(jLPassword))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jCommunity, 0, 164, Short.MAX_VALUE)
                            .addComponent(jPassword))
                        .addGap(144, 144, 144))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(296, 296, 296))))
            .addGroup(layout.createSequentialGroup()
                .addGap(360, 360, 360)
                .addComponent(jBtnLogin)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel4)
                            .addComponent(jCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLPassword)
                            .addComponent(jTUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLUsername)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(165, 165, 165)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel2)
                            .addComponent(jCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(42, 42, 42)
                .addComponent(jBtnLogin)
                .addContainerGap(198, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTUsernameActionPerformed

    private void jBtnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnLoginActionPerformed
        // TODO add your handling code here:
        String selectedType = (String) jDropdown.getSelectedItem();
        String userName = jTUsername.getText();
        String password = jPassword.getText();
        if(selectedType.equalsIgnoreCase("System Admin")){
             if(cityLog.getUserName().equals(userName) && cityLog.getPassword().equals(password)){
            SystemAdmin systemAdmin = new SystemAdmin(jSplitPane2,cityLog,jPanel2,false);
            jSplitPane2.setRightComponent(systemAdmin);
        }
             else{
                  JOptionPane.showMessageDialog(this, "Invalid UserName or Password");

             }
        }
        else{
            boolean flag = false;
            String selectedCity = (String) jCity.getSelectedItem();
            String selectedCommunity = (String) jCommunity.getSelectedItem();
            City city = cityLog.searchCity(selectedCity);
            Community comm = city.getCommunityCatalog().searchCommunity(selectedCommunity);
            if(selectedType.equalsIgnoreCase("Community Admin")){ 
                jCity.setEnabled(false);
                jCommunity.setEnabled(false);
             if(cityLog.getCommUserName().equals(userName) && cityLog.getCommPassword().equals(password)){
                    CommunityAdmin commAdmin = new CommunityAdmin(cityLog,jSplitPane2,comm,jPanel2,city,false);
                    jSplitPane2.setRightComponent(commAdmin);
                    flag = true;
                }
            if(!flag){
                    JOptionPane.showMessageDialog(this, "Invalid UserName or Password");
            }
        }
            if(selectedType.equalsIgnoreCase("Doctor Login")){
            HospitalCatalouge hospLog = comm.getHospitalCataloug();
            for(int i = 0; i < hospLog.size();i++){
            DoctorCatalouge docLog = hospLog.get(i).getDoctorCataloug();
            for(int j = 0;j < docLog.size();j++){
                if(docLog.get(j).getPerson().getLoginInfo().getUserName().equals(userName) && docLog.get(j).getPerson().getLoginInfo().getPassword().equals(password) && docLog.get(j).getPerson().isDoctor()){
                    DoctorPage doctorPage = new DoctorPage(jSplitPane2,cityLog,docLog.get(j), hospLog.get(i));
                    jSplitPane2.setRightComponent(doctorPage);
                    break;
                }
                else {
                    JOptionPane.showMessageDialog(this, "Invalid UserName or Password");
                }
            }
        }
                
            }
            if(selectedType.equalsIgnoreCase("Hospital Admin")){
                PeopleCatalouge peopLog = comm.getPeopleCatalog();
                HospitalCatalouge hosLog = comm.getHospitalCataloug();
            boolean flag1 = false;
            for(int i = 0; i < peopLog.size();i++){
                if(peopLog.get(i).isHospitalAdmin() && peopLog.get(i).getLoginInfo().getUserName().equalsIgnoreCase(userName) && peopLog.get(i).getLoginInfo().getPassword().equals(password)){
                    for(int j = 0; j< hosLog.size();j++){
                        if(hosLog.get(j).getAdminId().equals(peopLog.get(i).getId())){
                           HospitalAdmin hospAdmin = new HospitalAdmin(jSplitPane2,jPanel2,comm,hosLog.get(j),false);
                           jSplitPane2.setRightComponent(hospAdmin);
                           flag1 = true;
                            break;  
                        }
                    }
                   
                }
            }
            if(!flag1){
                    JOptionPane.showMessageDialog(this, "Invalid UserName or Password");
            }
            }
            if(selectedType.equalsIgnoreCase("Doctor Login")){
            HospitalCatalouge hospLog = comm.getHospitalCataloug();
            for(int i = 0; i < hospLog.size();i++){
            DoctorCatalouge docLog = hospLog.get(i).getDoctorCataloug();
            for(int j = 0;j < docLog.size();j++){
                if(docLog.get(j).getPerson().getLoginInfo().getUserName().equals(userName) && docLog.get(j).getPerson().getLoginInfo().getPassword().equals(password) && docLog.get(j).getPerson().isDoctor()){
                    DoctorPage doctorPage = new DoctorPage(jSplitPane2,cityLog,docLog.get(j), hospLog.get(i));
                    jSplitPane2.setRightComponent(doctorPage);
                    break;
                }
                else {
                    JOptionPane.showMessageDialog(this, "Invalid UserName or Password");
                }
            }
        }
                
            }
    }
    }//GEN-LAST:event_jBtnLoginActionPerformed

    private void jTUsernameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTUsernameFocusGained
        // TODO add your handling code here:
        if(jTUsername.getText().equals("Enter Username")){
            jTUsername.setText("");
            jTUsername.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_jTUsernameFocusGained

    private void jTUsernameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTUsernameFocusLost
        // TODO add your handling code here:
        if(jTUsername.getText().equals("")){
            jTUsername.setText("Enter City");
            jTUsername.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_jTUsernameFocusLost

    private void jPasswordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPasswordFocusGained
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jPasswordFocusGained

    private void jDropdownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDropdownActionPerformed
        // TODO add your handling code here:
        String selectedType = (String) jDropdown.getSelectedItem();
        if(selectedType.equals("System Admin")){
           jCity.setEnabled(false);
           jCommunity.setEnabled(false); 
        }
        else if(selectedType.equals("Community Admin")){
            jCity.setEnabled(false);
            jCommunity.setEnabled(false); 
        }
        else{
            jCity.setEnabled(true);
           jCommunity.setEnabled(true);
        }
        for (int i = 0; i< cityLog.size();i++){
            jCity.addItem(cityLog.get(i).getCityName());
           }

    }//GEN-LAST:event_jDropdownActionPerformed

    private void jCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCityActionPerformed
        // TODO add your handling code here:
        String selectedCity = (String) jCity.getSelectedItem();
        City selected  = new City();
        jCommunity.removeAllItems();
        selected = cityLog.searchCity(selectedCity);
        for (int i =0;i<selected.getCommunityCatalog().size();i++){
            Community comm = new Community();
            comm = selected.getCommunityCatalog().get(i);
            jCommunity.addItem(comm.getCommunityName());
        }
    }//GEN-LAST:event_jCityActionPerformed

    private void jCommunityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCommunityActionPerformed
        // TODO add your handling code here:
//        String selectedCity = (String) jCity.getSelectedItem();
//        City selected  = new City();
//        DefaultTableModel model = (DefaultTableModel) jHospitalTable.getModel();
//        model.setRowCount(0);
//        selected = cityLog.searchCity(selectedCity);
//        for (int i =0;i<selected.getCommunityCatalog().size();i++){
//            Community comm = new Community();
//            comm = selected.getCommunityCatalog().get(i);
//            if(comm.getCommunityName().equals((String)jCommunity.getSelectedItem())){
//                for(int j = 0 ; j < comm.getHospitalCataloug().size();j++){
//                    Hospital hosp = new Hospital();
//                    hosp = comm.getHospitalCataloug().get(j);
//                    for(int k = 0; k< hosp.getDoctorCataloug().size();k++){
//                        Doctor doc = new Doctor();
//                        doc = hosp.getDoctorCataloug().get(k);
//                        Object rowData[] = new Object[5];
//                        rowData[0] = doc.getPerson().getId();
//                        rowData[1] = doc.getPerson().getName();
//                        rowData[2] = hosp.getHospitalName();
//                        rowData[4] = selected.getCityName();
//                        rowData[3] = comm.getCommunityName();
//                        model.addRow(rowData);
//                    }
//                }
//            }
//        }
    }//GEN-LAST:event_jCommunityActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnLogin;
    private javax.swing.JComboBox<String> jCity;
    private javax.swing.JComboBox<String> jCommunity;
    private javax.swing.JComboBox<String> jDropdown;
    private javax.swing.JLabel jLPassword;
    private javax.swing.JLabel jLUsername;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPasswordField jPassword;
    private javax.swing.JTextField jTUsername;
    // End of variables declaration//GEN-END:variables
}
